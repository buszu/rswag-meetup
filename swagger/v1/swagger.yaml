---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/about":
    get:
      summary: show info about the application
      tags:
      - About
      security:
      - beboks_registry_auth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                required:
                - name
                - version
                properties:
                  name:
                    type: string
                  version:
                    type: string
              examples:
                successful:
                  value:
                    name: 'Rswag Meetup: Example Project'
                    version: 0.0.0
  "/api/v1/beboks":
    post:
      summary: add a bebok to registry
      tags:
      - Beboks
      security:
      - beboks_registry_auth: []
      parameters: []
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/bebok_schema"
              examples:
                created:
                  value:
                    bebok:
                      id: 1
                      heart:
                        id: 1
                        bpm: 45
                        color: gamma
                      mood: tranquilo
                      name: Maciej
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_schema"
              examples:
                when name is too long:
                  value:
                    error: Validation failed
                    details:
                      name:
                      - size cannot be greater than 150
                when heart color is unsupported:
                  value:
                    error: Validation failed
                    details:
                      heart:
                        color:
                        - 'must be one of: blue, gamma, red'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
              - name
              - mood
              - heart
              properties:
                name:
                  type: string
                  example: Bebok Niebieski
                  minLength: 1
                  maxLength: 150
                mood:
                  example: tranquilo
                  type: string
                  enum:
                  - sad
                  - tranquilo
                heart:
                  type: object
                  required:
                  - color
                  - bpm
                  properties:
                    color:
                      example: blue
                      type: string
                      enum:
                      - blue
                      - gamma
                      - red
                    bpm:
                      example: 50
                      type: integer
                      minimum: 1
    get:
      summary: list beboks
      tags:
      - Beboks
      security:
      - beboks_registry_auth: []
      parameters:
      - name: mood
        required: false
        in: query
        schema:
          type: string
          enum:
          - angry
          - focused
          - sad
          - tranquilo
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/beboks_schema"
              examples:
                successful:
                  value:
                    beboks: []
  "/api/v1/beboks/{id}":
    delete:
      summary: delete bebok data
      tags:
      - Beboks
      security:
      - beboks_registry_auth: []
      parameters:
      - name: id
        in: path
        description: ID of the bebok data to be deleted
        schema:
          type: integer
        required: true
      responses:
        '204':
          description: successful
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_schema"
              examples:
                not found:
                  value:
                    error: Couldn't find Bebok with id = 1
    patch:
      summary: update bebok data
      tags:
      - Beboks
      security:
      - beboks_registry_auth: []
      parameters:
      - name: id
        in: path
        description: ID of the bebok that will be updated
        schema:
          type: integer
        required: true
      responses:
        '200':
          description: updated
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/bebok_schema"
              examples:
                updated:
                  value:
                    bebok:
                      id: 1
                      heart:
                        id: 1
                        bpm: 120
                        color: blue
                      mood: sad
                      name: updated bebok
        '404':
          description: not found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/error_schema"
              examples:
                not found:
                  value:
                    error: Couldn't find Bebok with id = 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Bebok Niebieski
                  minLength: 1
                  maxLength: 150
                mood:
                  type: string
                  example: tranquilo
                  enum:
                  - sad
                  - tranquilo
                heart:
                  type: object
                  required:
                  - color
                  - bpm
                  properties:
                    color:
                      example: blue
                      type: string
                      enum:
                      - blue
                      - gamma
                      - red
                    bpm:
                      example: 50
                      type: integer
                      minimum: 1
servers:
- url: http://localhost:3000
  description: Localhost
components:
  securitySchemes:
    beboks_registry_auth:
      type: apiKey
      in: header
      name: BeboksRegistryToken
  schemas:
    bebok_schema:
      type: object
      required:
      - bebok
      properties:
        bebok:
          type: object
          required:
          - heart
          - id
          - mood
          - name
          properties:
            heart:
              "$ref": "#/components/schemas/heart_schema/properties/heart"
            id:
              type: integer
            mood:
              "$ref": "#/components/schemas/bebok_moods_enum"
            name:
              type: string
    beboks_schema:
      type: object
      required:
      - beboks
      properties:
        beboks:
          type: array
          items:
            "$ref": "#/components/schemas/bebok_schema/properties/bebok"
    bebok_moods_enum:
      type: string
      enum:
      - angry
      - focused
      - sad
      - tranquilo
    error_schema:
      type: object
      required:
      - error
      properties:
        error:
          type: string
        details:
          type: object
    heart_schema:
      type: object
      required:
      - heart
      properties:
        heart:
          type: object
          required:
          - bpm
          - color
          - id
          properties:
            id:
              type: integer
            bpm:
              type: integer
            color:
              "$ref": "#/components/schemas/heart_colors_enum"
    heart_colors_enum:
      type: string
      enum:
      - blue
      - gamma
      - red
